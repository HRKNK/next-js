// layout оборачивает страницу (обязательный компонент)
// точка входа в приложение

import type { Metadata } from 'next'
import { Noto_Sans } from 'next/font/google'
import './globals.css'
// import Head from 'next/head'

import styles from './page.module.css'
import Header from '@/layouts/header/Header';
import Sidebar from '@/layouts/sidebar/Sidebar';
import Footer from '@/layouts/footer/Footer';
import Menu from '@/widgets/menu/Menu';
import { Htag } from '@/components/public.api';
import Tag from '@/components/Tag/Tag';
import Sort from '@/components/Sort/Sort';
import { getMenu } from '@/api/page';

// подключение шрифта (оптимальная загрузка при ssr) // const noto_sans = Noto_Sans({ weight: '400', subsets: ['cyrillic'] });
const noto_sans = Noto_Sans({ weight: ['200', '400', '500', '600', '700'], subsets: ['cyrillic'] });
// подключение:
// open_sans.className - для классов / open_sans.style - для прямого style

// метаданные. имеет самый низкий приоритет и позволяет себя переопределять на уровне страниц.
// так же имеет merge эффект (объединение объектов с метаданными)
// metadata - не работает с 'use client';
export const metadata: Metadata = {
  title: 'Next App',
  description: 'Generated by create next app',
}

	{/* <Head> // устаревший метод объявления метаданных (next v11)
		<title>Next App</title>
		<meta name="description" content="Generated by create next app" />
		<link rel="icon" href="/favicon.ico" />
	</Head> */}

export default async function RootSiteLayout({children}: {children: React.ReactNode}) {
	const menu = await getMenu(0);
	return (
		<html lang="en">
		<body className={noto_sans.className}>
			{/* style={{backgroundColor: 'white', width: '55vw', margin: '0 auto', height: '100vh'}} className={noto_sans.className} */}
			<div className={styles.wrapper}>
			<Header className={styles.header}/>
			<Sidebar className={styles.sidebar}>
				{/* {menu.map(i => (<li key={i._id.secondCategory}>{i._id.secondCategory}</li>) )} */}
				<Menu nav_item={menu}></Menu>
			</Sidebar>
			<main className={styles.body}>
				<header>
				<Htag tag='h1'>{'Курсы по Photoshop'}</Htag>
				<Tag color='gray' size='s'>10</Tag>
				<Sort sort='price'></Sort>
				</header>

				{children}
			</main>
			<Footer className={styles.footer}/>
			</div>
		</body>
		</html>
	)
}
